{"version":3,"file":"static/js/164.cbf87608.chunk.js","mappings":"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","sources":["components/Comic/Comment.tsx","components/Comic/Series.tsx","components/Comic/Share.tsx","components/Forum/ForumList.tsx","components/Modal/FolderModal.tsx","components/Modal/MsgModal.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { useInView } from \"react-intersection-observer\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport ForumList from \"../Forum/ForumList\";\nimport DialogModal from \"../../components/Modal/DialogModal\";\nimport { FETCH_FORUM_THUNK, FETCH_FORUM_SEND_THUNK } from \"../../actions/forumAction\";\nimport { CLEAR_FORUM_LIST, LOAD_FORUM_LIST } from \"../../reducers/forumReducer\";\nimport { CommonQData } from \"../../assets/JsonData\";\n\nconst NewTopic = (props: any) => {\n  const { t, logined, setDialogOpen, dialogOpen, responds } = props;\n  return (\n    <div className=\"sticky bottom-0 bg-bbk h-20 flex items-center justify-center mt-10\">\n      <input\n        type=\"text\"\n        maxLength={200}\n        placeholder={t(\"forum.start_new_topic\")}\n        className=\"w-10/12 h-10 rounded p-2 outline-none dark:bg-bk\"\n        value={responds.newTopic}\n        onChange={() => setDialogOpen({ ...dialogOpen, [logined ? \"newTopic\" : \"login\"]: true })}\n        onClick={() => setDialogOpen({ ...dialogOpen, [logined ? \"newTopic\" : \"login\"]: true })}\n      />\n      <button className=\"rounded-full bg-og p-2 ml-2\">\n        <SendIcon sx={{ color: \"white\", fontSize: 18, stroke: \"white\", strokeWidth: 1 }} />\n      </button>\n    </div>\n  );\n};\n\nconst Comment = (props: any) => {\n  const { t, logined, queryId, setting, dialogOpen, setDialogOpen, showSnackbar, bottomTopicInput, centerTopicInput } =\n    props;\n  const commonQ = CommonQData();\n  const rulesContent = commonQ[2].text_section[0].content.slice(0, 7);\n  const { forumList, isLoading } = useAppSelector((state) => state.forum);\n  const dispatch = useAppDispatch();\n  const [responds, setResponds] = useState({ newTopic: \"\", spoilers: false, reply: \"\", activeIndex: null });\n  const { ref, inView } = useInView();\n  const [page, setPage] = useState<number>(0);\n  const pageLimit = forumList.list?.length ? Math.ceil(forumList.total / 10) : 0;\n  const hasNextPage = page <= pageLimit;\n\n  const loadList = (\n    isLoadMore: boolean = false,\n    isRefreshing: boolean = false,\n    time: number = 0,\n    mode: string = \"all\",\n    page: number = 1,\n    aid: string = queryId\n  ) => {\n    dispatch(LOAD_FORUM_LIST({ isLoading: true, isLoadMore, isRefreshing }));\n    if (!isLoadMore) {\n      dispatch(CLEAR_FORUM_LIST(\"forumList\"));\n      setPage(1);\n    }\n    setTimeout(() => {\n      dispatch(FETCH_FORUM_THUNK({ mode, page, aid }));\n    }, time);\n  };\n\n  // newTopic && reply\n  const handleSendRespond = async (comment: string, aid: string, comment_id?: string) => {\n    let result: Record<string, any> = {};\n    if (dialogOpen.newTopic && responds.newTopic !== \"\") {\n      result = await dispatch(FETCH_FORUM_SEND_THUNK({ comment, aid })).unwrap();\n    } else if (responds.reply !== \"\" && comment_id !== \"\") {\n      result = await dispatch(FETCH_FORUM_SEND_THUNK({ comment, aid, comment_id })).unwrap();\n    }\n    if (result.code === 200) {\n      const { msg, status } = result.data;\n      const type = status !== \"ok\" ? \"error\" : \"success\";\n      showSnackbar(msg, type);\n      setResponds((prev: any) => ({ ...prev, reply: \"\", newTopic: \"\" }));\n      setDialogOpen({ ...dialogOpen, newTopic: false });\n    }\n  };\n\n  useEffect(() => {\n    if (queryId) {\n      loadList();\n      sessionStorage.setItem(\"forumFrom\", \"detail\");\n    }\n  }, [queryId]);\n\n  // load more\n  const loadMore = useCallback(() => {\n    if (!inView || !hasNextPage) return;\n    const nextPage = page + 1;\n    setPage(nextPage);\n    loadList(true, false, 1000, \"all\", nextPage);\n  }, [inView, hasNextPage]);\n\n  useEffect(() => {\n    loadMore();\n  }, [inView]);\n\n  return (\n    <>\n      <div className=\"text-gy dark:text-tgy\">\n        <div className=\"p-3 text-bbk dark:text-tgy\">\n          {rulesContent.map((d: any) => (\n            <p key={d}>{d}</p>\n          ))}\n        </div>\n        {centerTopicInput && (\n          <NewTopic t={t} logined={logined} dialogOpen={dialogOpen} setDialogOpen={setDialogOpen} responds={responds} />\n        )}\n        <>\n          <ForumList\n            t={t}\n            logined={logined}\n            setting={setting}\n            list={forumList?.list}\n            isLoading={isLoading}\n            dialogOpen={dialogOpen}\n            setDialogOpen={setDialogOpen}\n            responds={responds}\n            setResponds={setResponds}\n            handleSendRespond={handleSendRespond}\n            showReplySection={true}\n            hasNextPage={hasNextPage}\n          />\n          {forumList?.list?.length > 0 && (\n            <button ref={ref} onClick={loadMore} className=\"w-full flex justify-center pb-40\"></button>\n          )}\n        </>\n      </div>\n      {bottomTopicInput && (\n        <NewTopic t={t} logined={logined} dialogOpen={dialogOpen} setDialogOpen={setDialogOpen} responds={responds} />\n      )}\n      {dialogOpen.newTopic && (\n        <DialogModal\n          queryId={queryId}\n          setDialogOpen={setDialogOpen}\n          dialogOpen={dialogOpen}\n          responds={responds}\n          setResponds={setResponds}\n          handleSendRespond={handleSendRespond}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Comment;\n","import { Link } from \"react-router-dom\";\n\nconst Series = (props: any) => {\n  const { t, queryId, seriesGroups, setSeriesGroups, msgOpen, handlerReadStorage, readHistory, setDialogOpen } = props;\n\n  return (\n    <>\n      <div className=\"p-3 text-gy\">\n        {seriesGroups.menus.length > 0 ? (\n          seriesGroups.menus.map((d: any, i: number) => (\n            <div key={i}>\n              <p\n                className={`flex border-[1px] border-solid border-[#ccc] rounded-md p-3 mb-4 ${\n                  seriesGroups.episode === i ? \"bg-og text-white\" : msgOpen?.detailDownload ? \"bg-defaultBg\" : \"\"\n                }`}\n                onClick={() => {\n                  setSeriesGroups((prev: any) => ({\n                    ...prev,\n                    episode: i,\n                  }));\n                }}\n              >\n                {t(\"detail.episode_prefix\")}\n                {d[0].sort}\n                {t(\"detail.episode_suffix\")}~{t(\"detail.episode_prefix\")}\n                {Math.ceil(d[0].sort / 10) * 10}\n                {t(\"detail.episode_suffix\")}\n              </p>\n              {seriesGroups.episode === i && (\n                <div className=\"grid grid-cols-2 gap-2 my-2 mb-10\">\n                  {d.map((item: any, index: number) =>\n                    !msgOpen?.detailDownload ? (\n                      <Link\n                        key={index}\n                        to={`/comic/detail/read?id=${queryId}&readId=${item.id}&episode=${i}&subEpisode=${item.sort}`}\n                        onClick={() => {\n                          handlerReadStorage(String(item.id));\n                          setSeriesGroups((prev: any) => ({\n                            ...prev,\n                            subEpisode: item.sort,\n                            currentChapterId: item.id,\n                          }));\n                          setDialogOpen((prev: any) => ({ ...prev, series: false }));\n                        }}\n                      >\n                        <p\n                          className={`flex border-[1px] border-solid border-[#bbb] rounded-md p-3 \n                            ${\n                              seriesGroups.subEpisode === item.sort\n                                ? \"bg-og text-white\"\n                                : readHistory.includes(item.id)\n                                ? \"bg-white text-og\"\n                                : \"\"\n                            }\n                                `}\n                        >\n                          {t(\"detail.episode_prefix\")}\n                          {item.sort}\n                          {t(\"detail.episode_suffix\")}&nbsp;{item.name}\n                        </p>\n                      </Link>\n                    ) : (\n                      <Link\n                        key={index}\n                        to={`/comic/detail/download?id=${item.id}`}\n                        onClick={() => {\n                          setSeriesGroups((prev: any) => ({\n                            ...prev,\n                            subEpisode: item.sort,\n                            currentChapterId: item.id,\n                          }));\n                        }}\n                      >\n                        <p\n                          className={`flex border-[1px] border-solid border-[#bbb] rounded-md p-3 ${\n                            seriesGroups.subEpisode === item.sort ? \"bg-og text-white\" : \"\"\n                          }`}\n                        >\n                          {t(\"detail.episode_prefix\")}\n                          {item.sort}\n                          {t(\"detail.episode_suffix\")}&nbsp;{item.name}\n                        </p>\n                      </Link>\n                    )\n                  )}\n                </div>\n              )}\n            </div>\n          ))\n        ) : (\n          <p className=\"text-center my-8\">{t(\"detail.no_more_chapters\")}</p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Series;\n","import ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport Backdrop from \"@mui/material/Backdrop\";\n\nimport {\n  FacebookMessengerShareButton,\n  FacebookShareButton,\n  EmailShareButton,\n  TelegramShareButton,\n  WhatsappShareButton,\n  EmailIcon,\n  FacebookMessengerIcon,\n  FacebookIcon,\n  TelegramIcon,\n  WhatsappIcon,\n} from \"react-share\";\n\nconst Share = (props: any) => {\n  const { setting, queryId, share, setShare, showSnackbar, type } = props;\n\n  const shareUrl = `http://${setting.main_web_host}/${type || \"album\"}/${queryId}`;\n  const title = \"分享这篇漫畫！\";\n\n  const copyToClipboard = () => {\n    navigator.clipboard\n      .writeText(shareUrl)\n      .then(() => {\n        showSnackbar(\"copied\", \"info\");\n        setTimeout(() => {\n          setShare(false);\n        }, 1000);\n      })\n      .catch((error) => {\n        console.error(\"Failed to copy text: \", error);\n      });\n  };\n\n  return (\n    <>\n      <Backdrop\n        sx={(theme) => ({ color: \"#fff\", zIndex: theme.zIndex.drawer + 1 })}\n        open={share}\n        onClick={() => setShare(!share)}\n      >\n        <div\n          className={`text-gy rounded-t-3xl w-full bg-[#fafafa] fixed bottom-0 z-[1401] overflow-y-auto transition-all duration-700 h-[50vh] ${\n            share ? \"animate-move-up\" : \"animate-move-down\"\n          }`}\n        >\n          <div className=\"py-4 z-20\">\n            <hr className=\"w-8 border-[1px] border-[#bbb] mx-auto\" />\n            <div className=\"flex items-center justify-center h-20\">\n              <p>{shareUrl}</p>\n            </div>\n            <div className=\"w-8/12 flex justify-around items-center mx-auto font-bold text-sm\">\n              <button\n                className=\"border border-solid border-blue-800 rounded-lg px-6 py-1 flex items-center\"\n                onClick={copyToClipboard}\n              >\n                <ContentCopyIcon sx={{ fontSize: 16, marginRight: 1 }} />\n                <span>Copy</span>\n              </button>\n              {/* <button\n                className=\"border border-solid border-blue-800 rounded-lg px-6 py-1 flex items-center text-nowrap\"\n                onClick={copyToClipboard}\n              >\n                <SendToMobileIcon sx={{ fontSize: 16, marginRight: 1 }} />\n                <span>Quick Share</span>\n              </button> */}\n            </div>\n            <div className=\"h-40 flex justify-center items-end\">\n              <p className=\"\">No recommended people to share with</p>\n            </div>\n            <div className=\"w-full fixed bottom-10 left-0 right-0 flex justify-around\">\n              <FacebookMessengerShareButton url={shareUrl} appId={title} className=\"flex flex-col items-center\">\n                <FacebookMessengerIcon size={42} round />\n                <span>Messenger</span>\n              </FacebookMessengerShareButton>\n\n              <EmailShareButton url={shareUrl} subject={title} className=\"flex flex-col items-center\">\n                <EmailIcon size={42} round />\n                <span>Email</span>\n              </EmailShareButton>\n\n              <FacebookShareButton url={shareUrl} title={title} className=\"flex flex-col items-center\">\n                <FacebookIcon size={42} round />\n                <span>Facebook</span>\n              </FacebookShareButton>\n\n              <TelegramShareButton url={shareUrl} title={title} className=\"flex flex-col items-center\">\n                <TelegramIcon size={42} round />\n                <span>Telegram</span>\n              </TelegramShareButton>\n\n              <WhatsappShareButton url={shareUrl} title={title} className=\"flex flex-col items-center\">\n                <WhatsappIcon size={42} round />\n                <span>Whatsapp</span>\n              </WhatsappShareButton>\n            </div>\n          </div>\n        </div>\n      </Backdrop>\n    </>\n  );\n};\n\nexport default Share;\n","import ReplyIcon from \"@mui/icons-material/Reply\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { useNavigate } from \"react-router-dom\";\nimport AdComponent from \"../Ads/AdComponent\";\nimport { useDelayedFlag } from \"../../Hooks\";\n\nconst ForumList = (props: any) => {\n  const navigate = useNavigate();\n  const hasScrolled = useDelayedFlag();\n  const {\n    t,\n    setting,\n    list,\n    isLoading,\n    setDialogOpen,\n    dialogOpen,\n    logined,\n    responds,\n    setResponds,\n    handleSendRespond,\n    showReplySection,\n  } = props;\n\n  const handleGetId = (id: string) => {\n    const splitId = id.split(\"JM\")[1];\n    navigate(`/comic/detail?id=${splitId}`);\n  };\n\n  return (\n    <>\n      {list?.length > 0\n        ? list.map((d: any, i: number) => (\n            <div key={i} className=\"bg-defaultBg dark:bg-bk dark:text-tgy\">\n              {i > 0 && i % 7 === 0 && (\n                <div className=\"dark:bg-bk pt-4\">\n                  <div className=\"bg-white pt-4 p-2 dark:bg-bbk\">\n                    <div className=\"flex\">\n                      <img\n                        src={`${setting?.img_host}/media/users/nopic-Male.gif`}\n                        alt={\"avatar\" + i}\n                        onError={(e) => {\n                          const target = e.target as HTMLImageElement;\n                          target.src = \"/images/ic_head.png\";\n                        }}\n                        className=\"w-16 bg-gy rounded-full\"\n                      />\n                      <div className=\"w-full ml-2\">\n                        <p className=\"text-og\">{t(\"forum.sponsor_JM\")}</p>\n                        {t(\"forum.LV100_click_to_save_forbidden_comics\")}\n                      </div>\n                    </div>\n                    <div className=\"w-full flex flex-row\">\n                      <div className=\"w-16 flex justify-start items-center\"></div>\n                      <div className=\"ml-2\">\n                        {hasScrolled && !isLoading && <AdComponent adKey=\"app_forum_middle\" />}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div className=\"dark:bg-bk pt-4\">\n                <div className=\"bg-white text-[#9f9e9e] p-4 dark:bg-bbk\">\n                  <div className=\"flex\">\n                    <div className=\"w-16 flex justify-center\">\n                      <img\n                        src={`${setting?.img_host}/media/users/${d.photo}`}\n                        alt={d.username}\n                        onError={(e) => {\n                          const target = e.target as HTMLImageElement;\n                          target.src = \"/images/ic_head.png\";\n                        }}\n                        width=\"100%\"\n                        height=\"100%\"\n                        className={`w-14 h-14 bg-gy ${d.photo !== \"nopic-Male.gif\" ? \"rounded-full\" : \"\"}`}\n                      />\n                    </div>\n                    <div className=\"w-full ml-2\">\n                      <p className=\"text-og\">\n                        {d.nickname || d.username}\n                        <span className=\"text-[#9f9e9e]\">&nbsp;·&nbsp;{d.expinfo?.level_name}</span>\n                      </p>\n                      {d.expinfo?.length > 0 && (\n                        <div className=\"w-full flex justify-between\">\n                          <div className=\"flex\">\n                            {d.expinfo?.badges.map((badgesItem: any, badgesIndex: number) => (\n                              <img\n                                key={badgesIndex}\n                                src={`${setting?.img_host}${decodeURIComponent(badgesItem.content)}`}\n                                alt={badgesItem.name}\n                                onError={(e) => {\n                                  const target = e.target as HTMLImageElement;\n                                  target.src = \"/images/ic_head.png\";\n                                }}\n                                width=\"100%\"\n                                height=\"auto\"\n                                className=\"w-7 h-7 mr-2 object-cover bg-gy\"\n                              />\n                            ))}\n                          </div>\n                          <span className=\"font-black\">{d.addtime}</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"w-full flex flex-row\">\n                    <div className=\"w-16 flex justify-center pt-2\">\n                      <p>Lv.{d.expinfo.level}</p>\n                    </div>\n                    <div className=\"w-10/12 ml-2 break-words\">\n                      <div className=\"text-bbk dark:text-tgy\" dangerouslySetInnerHTML={{ __html: d.content }} />\n                      <div className=\"flex justify-between items-center mt-2\">\n                        <div className=\"\">\n                          {/* <FavoriteIcon className=\"text-og text-lg mr-1\" />\n                          {d.likes} */}\n                        </div>\n                        <button className=\"float-right\" onClick={() => handleGetId(d.name)}>\n                          {d.name}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  {/* sub  */}\n                  {d?.replys?.length > 0\n                    ? d.replys.map((reply: any, index: number) => (\n                        <div key={index} className=\"pl-2\">\n                          <div key={index} className=\"flex mt-4\">\n                            <div className=\"w-16 flex justify-center items-center\">\n                              <img\n                                src={`${setting?.img_host}/media/users/${reply.photo}`}\n                                alt={reply.username}\n                                onError={(e) => {\n                                  const target = e.target as HTMLImageElement;\n                                  target.src = \"/images/ic_head.png\";\n                                }}\n                                width=\"100%\"\n                                height=\"auto\"\n                                className={`bg-gy w-10 h-10 ${reply.photo !== \"nopic-Male.gif\" ? \"rounded-full\" : \"\"}`}\n                              />\n                            </div>\n                            <div className=\"w-full ml-2\">\n                              <p className=\"text-og\">\n                                {reply.nickname || reply.username}\n                                <span className=\"text-[#9f9e9e]\">&nbsp;·&nbsp;{reply.expinfo.level_name}</span>\n                              </p>\n                              <div className=\"w-full flex justify-between\">\n                                <div className=\"flex\">\n                                  {reply.expinfo?.badges.map((badgesItem: any, badgesIndex: number) => (\n                                    <img\n                                      key={badgesIndex}\n                                      src={`${setting?.img_host}${decodeURIComponent(badgesItem.content)}`}\n                                      alt={badgesItem.name}\n                                      onError={(e) => {\n                                        const target = e.target as HTMLImageElement;\n                                        target.src = \"/images/ic_head.png\";\n                                      }}\n                                      width=\"100%\"\n                                      height=\"auto\"\n                                      className=\"w-8 h-8 mr-2 bg-gy\"\n                                    />\n                                  ))}\n                                </div>\n                                <span className=\"font-black\">{reply.addtime}</span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"w-full flex flex-row\">\n                            <div className=\"w-16 flex justify-center pt-2\">\n                              <p>Lv.{reply.expinfo.level}</p>\n                            </div>\n                            <div className=\"w-10/12 ml-2 break-words\">\n                              <div\n                                className=\"text-bbk dark:text-tgy\"\n                                dangerouslySetInnerHTML={{ __html: reply.content }}\n                              />\n                              <div className=\"flex justify-between items-center mt-2\">\n                                <div className=\"\">\n                                  {/* <FavoriteIcon className=\"text-og text-lg mr-1\" /> */}\n                                  {/* {reply.likes} */}\n                                </div>\n                                <button className=\"float-right\" onClick={() => handleGetId(reply.name)}>\n                                  {reply.name}\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ))\n                    : \"\"}\n                </div>\n              </div>\n              {showReplySection && (\n                <div className=\"py-4 flex items-center justify-center dark:bg-nbk\">\n                  <input\n                    type=\"text\"\n                    placeholder={t(\"forum.give_response\")}\n                    className=\"w-10/12 h-10 rounded-lg p-2 border-none outline-none dark:bg-bbk\"\n                    maxLength={200}\n                    value={responds.activeIndex === i ? responds.reply : \"\"}\n                    onChange={(e) => {\n                      if (!logined) {\n                        setDialogOpen({ ...dialogOpen, login: true });\n                      } else {\n                        setResponds((prev: any) => ({\n                          ...prev,\n                          activeIndex: i,\n                          reply: e.target.value,\n                        }));\n                      }\n                    }}\n                  />\n\n                  <button\n                    className={`rounded-full ${\n                      responds.activeIndex === i && responds.reply !== \"\" ? \"bg-og dark:bg-og\" : \"bg-[#aaa] dark:bg-gy\"\n                    } p-2 ml-2`}\n                    disabled={responds.reply === \"\"}\n                    onClick={() => {\n                      handleSendRespond(responds.reply, d.AID, d.CID);\n                    }}\n                  >\n                    <ReplyIcon sx={{ color: \"white\", fontSize: 20, stroke: \"white\", strokeWidth: 1 }} />\n                  </button>\n                </div>\n              )}\n            </div>\n          ))\n        : !isLoading && <p className=\"text-center my-10\">{t(\"forum.no_comments_yet\")}</p>}\n      {isLoading && (\n        <div className=\"flex flex-col justify-center my-4\">\n          <img src=\"/images/loading.gif\" alt=\"loading\" width=\"50px\" className=\"mx-auto\" />\n          <p className=\"text-center text-gy\">{t(\"comic.loading\")}</p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ForumList;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { IconButton } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Slide from \"@mui/material/Slide\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport Fade from \"@mui/material/Fade\";\nimport Menu from \"@mui/material/Menu\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst FolderModal = (props: any) => {\n  const { dialogOpen, setDialogOpen, editFolder, setEditFolder, handleEditFolder, folderList, tagsList } = props;\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const { t } = useTranslation();\n  const isSelectedAll = tagsList?.length > 0 && editFolder.tags_select === tagsList.toString();\n\n  const handleClose = (_event: React.SyntheticEvent, reason?: string): void => {\n    // 檢查背景點擊 (backdropClick) 時不關閉視窗\n    if (reason === \"backdropClick\") {\n      return;\n    }\n    setDialogOpen({ ...dialogOpen, folder: false });\n  };\n  return (\n    <>\n      {dialogOpen.folder && (\n        <Dialog\n          onClose={handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={dialogOpen.folder}\n          TransitionComponent={Transition}\n          className=\"text-white\"\n          slotProps={{ backdrop: { sx: { backgroundColor: \"rgba(0, 0, 0, 0.3)\" } } }}\n          sx={() => ({\n            \"& .MuiPaper-root\": {\n              paddingY: \"1rem\",\n              width: \"90%\",\n            },\n          })}\n        >\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={(theme) => ({\n              position: \"absolute\",\n              right: 8,\n              top: 8,\n              color: theme.palette.grey[700],\n              stroke: theme.palette.grey[700],\n              strokeWidth: 2,\n            })}\n          >\n            <CloseIcon />\n          </IconButton>\n          {editFolder.type === \"add\" && (\n            <DialogTitle className=\"text-center\" id=\"customized-dialog-title\">\n              {t(\"member.add_folder\")}\n            </DialogTitle>\n          )}\n          {editFolder.type === \"edit\" && (\n            <DialogTitle className=\"text-center\" id=\"customized-dialog-title\">\n              {t(\"member.rename_folder\")}\n            </DialogTitle>\n          )}\n          {editFolder.type === \"move\" && (\n            <DialogTitle id=\"customized-dialog-title\">{t(\"member.Select_favorite_folder\")}</DialogTitle>\n          )}\n          <DialogContent className=\"\">\n            {(editFolder.type === \"add\" || editFolder.type === \"edit\") && (\n              <input\n                type=\"text\"\n                placeholder={t(\"member.enter_folder_name\")}\n                className=\"w-11/12 h-10 p-4 border border-solid border-gy\"\n                onChange={(e) => setEditFolder({ ...editFolder, folder_name: e.target.value })}\n              />\n            )}\n            {editFolder.type === \"move\" && (\n              <div>\n                <Button\n                  id=\"fade-button\"\n                  aria-controls={open ? \"fade-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  aria-expanded={open ? \"true\" : undefined}\n                  onClick={(e) => setAnchorEl(e.currentTarget)}\n                  className=\"flex justify-between p-0 w-8/12 text-[#aaa] text-lg\"\n                >\n                  <span className=\"pr-10\">{editFolder.folder_name || t(\"member.select_folder\")}</span>\n                  <ArrowDropDownIcon sx={{ color: \"#ff6f00\", fontSize: 24 }} />\n                </Button>\n                <Menu\n                  id=\"fade-menu\"\n                  MenuListProps={{\n                    \"aria-labelledby\": \"fade-button\",\n                  }}\n                  anchorEl={anchorEl}\n                  open={open}\n                  onClose={() => setAnchorEl(null)}\n                  TransitionComponent={Fade}\n                  sx={(theme) => ({\n                    \"& .MuiPaper-root\": {\n                      marginTop: theme.spacing(0),\n                      marginLeft: theme.spacing(-2),\n                      width: \"50%\",\n                      color: \"#757575\",\n                    },\n                  })}\n                >\n                  {folderList?.length > 0 &&\n                    folderList.map((d: any, i: number) => (\n                      <MenuItem\n                        key={d.FID}\n                        onClick={() => {\n                          setAnchorEl(null);\n                          setEditFolder({\n                            ...editFolder,\n                            folder_name: d.name,\n                            folder_id: d.FID,\n                          });\n                        }}\n                      >\n                        {d.name}\n                      </MenuItem>\n                    ))}\n                </Menu>\n              </div>\n            )}\n            {tagsList?.length > 0 && (\n              <>\n                <hr className=\"border-2 border-tgy my-4\" />\n                <div className=\"text-left\">\n                  <div className=\"flex items-center\">\n                    <p\n                      className=\"border-2 border-solid border-og w-5 h-5 flex justify-center items-center overflow-hidden mr-2\"\n                      onClick={() => {\n                        const newTags = isSelectedAll ? \"\" : tagsList.toString();\n                        setEditFolder((prev: any) => ({\n                          ...prev,\n                          tags_select: newTags,\n                        }));\n                      }}\n                    >\n                      {isSelectedAll && (\n                        <CheckIcon sx={{ fontSize: 14, color: \"#ff6f00\", stroke: \"#ff6f00\", strokeWidth: 2 }} />\n                      )}\n                    </p>\n                    <span>收藏全部標籤</span>\n                  </div>\n                  <div className=\"flex flex-wrap items-center text-gy mt-4 dark:text-tgy\">\n                    {tagsList.map((d: any) => (\n                      <span\n                        key={d}\n                        className={`border-[1px] border-solid border-gy rounded-md p-1 m-1 dark:bg-nbk\n                         ${editFolder.tags_select?.split(\",\").includes(d) ? \"bg-og text-white border-og\" : \"\"}`}\n                        onClick={() => {\n                          const selectArray = editFolder.tags_select?.split(\",\") || [];\n                          const isSelected = selectArray.includes(d);\n\n                          const newSelect = isSelected ? selectArray.filter((s: any) => s !== d) : [...selectArray, d];\n\n                          setEditFolder((prev: any) => ({\n                            ...prev,\n                            tags_select: newSelect.join(\",\").replace(/^,/, \"\"),\n                          }));\n                        }}\n                      >\n                        {\"#\" + d}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              </>\n            )}\n          </DialogContent>\n          <DialogActions className=\"flex justify-center\">\n            <Button\n              className=\"bg-og text-white rounded border-solid border-2 border-og w-8/12\"\n              onClick={(e) => {\n                handleClose(e);\n                editFolder.type === \"add\" && handleEditFolder(\"add\");\n                editFolder.type === \"edit\" && handleEditFolder(\"edit\");\n                editFolder.type === \"move\" && handleEditFolder(\"move\");\n              }}\n            >\n              {t(\"member.confirm\")}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default FolderModal;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { IconButton } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Slide from \"@mui/material/Slide\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport Series from \"../Comic/Series\";\nimport { useGlobalConfig } from \"../../GlobalContext\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst MsgModal = (props: any) => {\n  const {\n    t,\n    logined,\n    queryId,\n    detailList,\n    setSeriesGroups,\n    seriesGroups,\n    content,\n    msgOpen,\n    setMsgOpen,\n    handleTracking,\n    handleSetDontShow,\n  } = props;\n  const { config } = useGlobalConfig();\n  const { darkMode } = config;\n  const [openIndex, setOpenIndex] = useState<number | null>(null);\n\n  const handleClose = (_event: React.SyntheticEvent, reason?: string): void => {\n    // 檢查背景點擊 (backdropClick) 時不關閉視窗\n    if (reason === \"backdropClick\") {\n      return;\n    }\n    setMsgOpen({ ...msgOpen, search: false, detail: false, detailDownload: false, member: false, readTrack: false });\n  };\n\n  return (\n    <>\n      {msgOpen.search && (\n        <Dialog\n          onClose={handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={msgOpen.search}\n          TransitionComponent={Transition}\n          className=\"text-white\"\n          sx={() => ({\n            \"& .MuiPaper-root\": {\n              paddingY: \"1rem\",\n              width: \"90%\",\n              background: darkMode ? \"#323232\" : \"\",\n              color: darkMode ? \"#d1d1d1\" : \"#323232\",\n            },\n          })}\n        >\n          <DialogTitle className=\"text-center\" id=\"customized-dialog-title\">\n            {content.title}\n            <hr className=\"w-9/12 border-[#aaa] m-auto\" />\n          </DialogTitle>\n          <DialogContent className=\"text-center py-0\">\n            <img\n              src={content.image ? content.image : \"/images/help_cover.png\"}\n              alt=\"help_cover\"\n              className=\"w-10/12 m-auto\"\n            />\n            {content.text_sections.map((d: any, i: number) => (\n              <div key={i}>\n                <p className=\"font-black mt-3\">{d.title}</p>\n                <span>{d.content}</span>\n                <span>{d.example}</span>\n              </div>\n            ))}\n          </DialogContent>\n          <DialogActions className=\"flex justify-center\">\n            <Button className=\"bg-og text-white rounded border-solid border-2 border-og w-8/12\" onClick={handleClose}>\n              {content.btn_text}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n\n      {msgOpen.detail && (\n        <Dialog\n          onClose={handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={msgOpen.detail}\n          TransitionComponent={Transition}\n          sx={() => ({\n            \"& .MuiPaper-root\": {\n              paddingY: \"1rem\",\n              width: \"90%\",\n              background: darkMode ? \"#323232\" : \"\",\n              color: darkMode ? \"#d1d1d1\" : \"#323232\",\n            },\n          })}\n        >\n          <DialogTitle className=\"text-center\" id=\"customized-dialog-title\">\n            {content.title}\n            <hr className=\"w-9/12 border-[#aaa] m-auto\" />\n          </DialogTitle>\n          <DialogContent>\n            <img src={content.image} alt=\"help_cover\" className=\"w-8/12 m-auto\" />\n            <div>\n              {content.text_sections.map((d: any, i: number) => (\n                <div key={i} className=\"mt-2\">\n                  <p className=\"font-black\">{d.title}</p>\n                  <span>{d.content}</span>\n                </div>\n              ))}\n            </div>\n          </DialogContent>\n          <DialogActions className=\"flex justify-center\">\n            <Button\n              className=\"bg-og text-white rounded border-solid border-2 border-og w-8/12 text-base\"\n              onClick={handleClose}\n            >\n              {content.btn_text}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n\n      {msgOpen.detailDownload && (\n        <Dialog\n          onClose={handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={msgOpen.detailDownload}\n          TransitionComponent={Transition}\n          sx={() => ({\n            \"& .MuiPaper-root\": {\n              // paddingY: \"1rem\",\n              width: \"90%\",\n              height: \"60%\",\n            },\n            \"& .MuiDialogContent-root\": {\n              padding: 0,\n            },\n          })}\n        >\n          <DialogTitle id=\"customized-dialog-title\">{t(\"detail.select_episode_to_download\")}</DialogTitle>\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={(theme) => ({\n              position: \"absolute\",\n              right: 8,\n              top: 8,\n              color: theme.palette.grey[900],\n            })}\n          >\n            <CloseIcon />\n          </IconButton>\n          <DialogContent>\n            <Series\n              t={t}\n              queryId={queryId}\n              detailList={detailList}\n              seriesGroups={seriesGroups}\n              setSeriesGroups={setSeriesGroups}\n              msgOpen={msgOpen}\n            />\n          </DialogContent>\n        </Dialog>\n      )}\n\n      {msgOpen.member && (\n        <Dialog\n          onClose={handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={msgOpen.member}\n          TransitionComponent={Transition}\n          className=\"text-white\"\n          sx={() => ({\n            \"& .MuiPaper-root\": {\n              paddingY: \"1rem\",\n              width: \"90%\",\n              margin: \"1rem\",\n            },\n          })}\n        >\n          <DialogTitle className=\"text-center text-4xl text-og\" id=\"customized-dialog-title\">\n            {content[0].title}\n          </DialogTitle>\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={(theme) => ({\n              position: \"absolute\",\n              right: 8,\n              top: 8,\n              color: theme.palette.grey[700],\n              stroke: theme.palette.grey[700],\n              strokeWidth: 2,\n            })}\n          >\n            <CloseIcon />\n          </IconButton>\n          <DialogContent sx={{ paddingTop: 0 }}>\n            <div>\n              {content[0].text_section.map((d: any, i: number) => (\n                <div key={i} className=\"mt-3\">\n                  <div\n                    className=\"bg-og border-1 border-solid border-og text-white text-xl flex justify-between rounded-t-lg p-4\"\n                    onClick={() => setOpenIndex(openIndex === i ? null : i)}\n                  >\n                    <p className=\"flex\">\n                      {Array.isArray(d.FAQ) &&\n                        d.FAQ.map((q: any, index: number) => (\n                          <React.Fragment key={index}>\n                            {q}\n                            {q.includes(t(\"common_q.jJar\")) && <img src={content[0].list[0].img} alt=\"jJar\" />}\n                            {q.includes(t(\"common_q.jCharge\")) && <img src={content[0].list[1].img} alt=\"jCharge\" />}\n                          </React.Fragment>\n                        ))}\n                    </p>\n                    {openIndex === i ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                  </div>\n                  {openIndex === i ? (\n                    <p className=\"text-lg border border-solid border-gy border-t-og p-3\">\n                      {d.content.map((item: any) => (\n                        <span key={item} className={`block ${i === 1 ? \"text-center\" : \"\"}`}>\n                          {item}\n                        </span>\n                      ))}\n                    </p>\n                  ) : null}\n                </div>\n              ))}\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n\n      {msgOpen.readTrack && (\n        <Dialog\n          onClose={handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={msgOpen.readTrack}\n          TransitionComponent={Transition}\n          className=\"text-white\"\n          sx={(theme) => ({\n            \"& .MuiPaper-root\": {\n              paddingY: \"1rem\",\n              width: \"90%\",\n              background: darkMode ? \"#323232\" : \"\",\n              color: darkMode ? \"#d1d1d1\" : theme.palette.grey[500],\n            },\n          })}\n        >\n          <DialogTitle id=\"customized-dialog-title\">{t(\"common_q.finalChapter\")}</DialogTitle>\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={(theme) => ({\n              position: \"absolute\",\n              right: 8,\n              top: 8,\n              color: theme.palette.grey[500],\n            })}\n          >\n            <CloseIcon />\n          </IconButton>\n          <DialogContent dividers className=\"py-10\">\n            {t(\"common_q.stayUpdated\")}\n          </DialogContent>\n          <DialogActions className=\"flex justify-between items-center px-6\">\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"dontShow\"\n                name=\"dontShow\"\n                className=\"mr-1\"\n                onChange={(e) => handleSetDontShow(e)}\n              />\n              <label htmlFor=\"dontShow\">{t(\"common_q.dontShow\")}</label>\n            </div>\n            <Button\n              className=\"bg-og text-white rounded border-solid border-2 border-og w-32\"\n              onClick={(e) => {\n                handleTracking(queryId);\n                logined && handleClose(e);\n              }}\n            >\n              {t(\"common_q.followSeries\")}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default MsgModal;\n"],"names":["NewTopic","props","t","logined","setDialogOpen","dialogOpen","responds","_jsxs","className","children","_jsx","type","maxLength","placeholder","value","newTopic","onChange","_objectSpread","onClick","SendIcon","sx","color","fontSize","stroke","strokeWidth","_forumList$list","_forumList$list2","queryId","setting","showSnackbar","bottomTopicInput","centerTopicInput","rulesContent","CommonQData","text_section","content","slice","forumList","isLoading","useAppSelector","state","forum","dispatch","useAppDispatch","setResponds","useState","spoilers","reply","activeIndex","ref","inView","useInView","page","setPage","pageLimit","list","length","Math","ceil","total","hasNextPage","loadList","isLoadMore","arguments","undefined","isRefreshing","time","mode","aid","LOAD_FORUM_LIST","CLEAR_FORUM_LIST","setTimeout","FETCH_FORUM_THUNK","handleSendRespond","async","comment","comment_id","result","FETCH_FORUM_SEND_THUNK","unwrap","code","msg","status","data","prev","useEffect","sessionStorage","setItem","loadMore","useCallback","nextPage","_Fragment","map","d","ForumList","showReplySection","DialogModal","seriesGroups","setSeriesGroups","msgOpen","handlerReadStorage","readHistory","menus","i","concat","episode","detailDownload","sort","item","index","Link","to","id","subEpisode","currentChapterId","name","String","series","includes","share","setShare","shareUrl","main_web_host","title","Backdrop","theme","zIndex","drawer","open","copyToClipboard","navigator","clipboard","writeText","then","catch","error","console","ContentCopyIcon","marginRight","FacebookMessengerShareButton","url","appId","FacebookMessengerIcon","size","round","EmailShareButton","subject","EmailIcon","FacebookShareButton","FacebookIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","WhatsappIcon","navigate","useNavigate","hasScrolled","useDelayedFlag","handleGetId","splitId","split","_d$expinfo","_d$expinfo2","_d$expinfo3","_d$replys","src","img_host","alt","onError","e","target","AdComponent","adKey","photo","username","width","height","nickname","expinfo","level_name","badges","badgesItem","badgesIndex","decodeURIComponent","addtime","level","dangerouslySetInnerHTML","__html","replys","_reply$expinfo","login","disabled","AID","CID","ReplyIcon","Transition","React","Slide","direction","editFolder","setEditFolder","handleEditFolder","folderList","tagsList","anchorEl","setAnchorEl","Boolean","useTranslation","isSelectedAll","tags_select","toString","handleClose","_event","reason","folder","Dialog","onClose","TransitionComponent","slotProps","backdrop","backgroundColor","paddingY","IconButton","position","right","top","palette","grey","CloseIcon","DialogTitle","DialogContent","folder_name","Button","currentTarget","ArrowDropDownIcon","Menu","MenuListProps","Fade","marginTop","spacing","marginLeft","MenuItem","folder_id","FID","newTags","CheckIcon","_editFolder$tags_sele","_editFolder$tags_sele2","selectArray","newSelect","filter","s","join","replace","DialogActions","detailList","setMsgOpen","handleTracking","handleSetDontShow","config","useGlobalConfig","darkMode","openIndex","setOpenIndex","search","detail","member","readTrack","background","image","text_sections","example","btn_text","padding","Series","margin","paddingTop","Array","isArray","FAQ","q","img","ExpandLessIcon","ExpandMoreIcon","dividers","htmlFor"],"sourceRoot":""}