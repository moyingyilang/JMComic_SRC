{"version":3,"file":"static/js/694.21cdff82.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/capture-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/order.mjs","../node_modules/framer-motion/dist/es/stats/buffer.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/stats/animation-count.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","function capturePointer(event, action) {\n    const actionName = `${action}PointerCapture`;\n    if (event.target instanceof Element &&\n        actionName in event.target &&\n        event.pointerId !== undefined) {\n        try {\n            event.target[actionName](event.pointerId);\n        }\n        catch (e) { }\n    }\n}\n\nexport { capturePointer };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { capturePointer } from '../utils/capture-pointer.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!target || !isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        capturePointer(startEvent, \"set\");\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            target.removeEventListener(\"pointerup\", onPointerUp);\n            target.removeEventListener(\"pointercancel\", onPointerCancel);\n            capturePointer(endEvent, \"release\");\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            const isOutside = !upEvent.isTrusted\n                ? false\n                : checkOutside(upEvent, target instanceof Element\n                    ? target.getBoundingClientRect()\n                    : {\n                        left: 0,\n                        top: 0,\n                        right: window.innerWidth,\n                        bottom: window.innerHeight,\n                    });\n            if (isOutside) {\n                onPointerEnd(upEvent, false);\n            }\n            else {\n                onPointerEnd(upEvent, !(target instanceof Element) ||\n                    isNodeOrChild(target, upEvent.target));\n            }\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        target.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        target.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n        target.addEventListener(\"lostpointercapture\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        target = options.useGlobalTarget ? window : target;\n        let canAddKeyboardAccessibility = false;\n        if (target instanceof HTMLElement) {\n            canAddKeyboardAccessibility = true;\n            if (!isElementKeyboardAccessible(target) &&\n                target.getAttribute(\"tabindex\") === null) {\n                target.tabIndex = 0;\n            }\n        }\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (canAddKeyboardAccessibility) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n        }\n    });\n    return cancelEvents;\n}\nfunction checkOutside(event, rect) {\n    return (event.clientX < rect.left ||\n        event.clientX > rect.right ||\n        event.clientY < rect.top ||\n        event.clientY > rect.bottom);\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.4.7\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { capturePointer, isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            if (event.target instanceof Element &&\n                event.target.hasPointerCapture &&\n                event.pointerId !== undefined) {\n                try {\n                    if (!event.target.hasPointerCapture(event.pointerId)) {\n                        return;\n                    }\n                }\n                catch (e) { }\n            }\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            capturePointer(event, \"release\");\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\" ||\n                event.type === \"lostpointercapture\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        capturePointer(event, \"set\");\n        this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { PanSession } from './PanSession.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.4.7\", `Attempting to mix Motion versions ${nextValue.version} with 12.4.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["usePresence","subscribe","arguments","length","undefined","context","useContext","PresenceContext","isPresent","onExitComplete","register","id","useId","useEffect","safeToRemove","useCallback","LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","variants","resolveVariant","getProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","i","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","Array","isArray","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","concat","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","EventTarget","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","_objectSpread","passive","signal","abort","isValidHover","event","pointerType","capturePointer","action","actionName","target","Element","pointerId","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","isOutside","isTrusted","rect","getBoundingClientRect","left","top","right","innerWidth","bottom","innerHeight","clientX","clientY","cancelEvent","addEventListener","canAddKeyboardAccessibility","element","useGlobalTarget","HTMLElement","tagName","tabIndex","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","noop","any","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","step","schedule","queue","process","frameData","frameloop","push","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","_objectWithoutProperties","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","activeAnimations","layout","mainThread","waapi","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","finally","startWaapiAnimation","pendingTimeline","playbackRate","playState","_this$options2","_excluded2","sampleTime","supports","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","mount","prevAnimate","prevProps","unmount","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","isRefObject","ref","PanSession","handlers","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","hasPointerCapture","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","useIsomorphicLayoutEffect","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","updateDimensions","createDomVisualElement","motion","useLayoutEffect"],"sourceRoot":""}